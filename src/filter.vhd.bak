library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use IEEE.math_real.all;
use work.FIR_Pkg.all;

entity FIR_Notch is
    Port (
        clk     : in  std_logic;
        rst     : in  std_logic;
        ena     : in  std_logic;
        x_in    : in  unsigned(11 downto 0);
        y_out   : out unsigned(11 downto 0)
    );
end FIR_Notch;

architecture arch_FIR_Noch of FIR_Notch is
    constant N : integer := 93;
    constant DATA_W: integer:= 12;
    -- Array de coeficientes normalizados por 2 a la 11
    constant rom : integer_array := (to_signed(-1, DATA_W),
                                        to_signed(-1, DATA_W),
                                        to_signed(-2, DATA_W),
                                        to_signed(-2, DATA_W),
                                        to_signed(-3, DATA_W),
                                        to_signed(-5, DATA_W),
                                        to_signed(-6, DATA_W),
                                        to_signed(-8, DATA_W),
                                        to_signed(-9, DATA_W),
                                        to_signed(-11, DATA_W),
                                        to_signed(-13, DATA_W),
                                        to_signed(-14, DATA_W),
                                        to_signed(-15, DATA_W),
                                        to_signed(-15, DATA_W),
                                        to_signed(-15, DATA_W),
                                        to_signed(-13, DATA_W),
                                        to_signed(-10, DATA_W),
                                        to_signed(-6, DATA_W),
                                        to_signed(-1, DATA_W),
                                        to_signed(6, DATA_W),
                                        to_signed(15, DATA_W),
                                        to_signed(24, DATA_W),
                                        to_signed(35, DATA_W),
                                        to_signed(46, DATA_W),
                                        to_signed(57, DATA_W),
                                        to_signed(69, DATA_W),
                                        to_signed(79, DATA_W),
                                        to_signed(89, DATA_W),
                                        to_signed(98, DATA_W),
                                        to_signed(105, DATA_W),
                                        to_signed(111, DATA_W),
                                        to_signed(114, DATA_W),
                                        to_signed(2163, DATA_W),
                                        to_signed(113, DATA_W),
                                        to_signed(110, DATA_W),
                                        to_signed(104, DATA_W),
                                        to_signed(96, DATA_W),
                                        to_signed(87, DATA_W),
                                        to_signed(77, DATA_W),
                                        to_signed(66, DATA_W),
                                        to_signed(55, DATA_W),
                                        to_signed(44, DATA_W),
                                        to_signed(33, DATA_W),
                                        to_signed(23, DATA_W),
                                        to_signed(14, DATA_W),
                                        to_signed(6, DATA_W),
                                        to_signed(-1, DATA_W),
                                        to_signed(-6, DATA_W),
                                        to_signed(-10, DATA_W),
                                        to_signed(-12, DATA_W),
                                        to_signed(-13, DATA_W),
                                        to_signed(-14, DATA_W),
                                        to_signed(-13, DATA_W),
                                        to_signed(-12, DATA_W),
                                        to_signed(-11, DATA_W),
                                        to_signed(-10, DATA_W),
                                        to_signed(-8, DATA_W),
                                        to_signed(-6, DATA_W),
                                        to_signed(-5, DATA_W),
                                        to_signed(-4, DATA_W),
                                        to_signed(-3, DATA_W),
                                        to_signed(-2, DATA_W),
                                        to_signed(-2, DATA_W),
                                        to_signed(-1, DATA_W),
                                        to_signed(-1, DATA_W)
                                        );
    signal x_signed   : signed(11 downto 0);
    signal x_samples  : signed_array;
    signal products   : integer_array;
    signal y_signed   : signed(11 downto 0);
begin

    --x_signed <= signed(x_in);
    -- unsigned to signed
    x_signed <= signed(x_in) - to_signed(2048, 12);

    SHIFT_REG: entity work.shift_register
        generic map (N => N)
        port map (
            clk      => clk,
            rst      => rst,
            ena      => ena,
            sample   => x_signed,
            regs_out => x_samples
        );

    gen_mult: for i in 0 to N-1 generate
        MULTi: entity work.multiplier
            port map (
                clk    => clk,
                ena    => ena,
                sample => x_samples(i),
                coeff  => rom(i),
                result => products(i)
            );
    end generate;

    SUM: entity work.adder
        generic map (N => N)
        port map (
            clk     => clk,
            ena     => ena,
            data_in => products,
            result  => y_out
        );
end arch_FIR_Noch;
